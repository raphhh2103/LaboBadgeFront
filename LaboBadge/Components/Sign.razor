@inject HttpClient httpClient
@using Models


<form>
   
    <fieldset>
    <legend>Sign in  NIQQQQQQQQQQQQQQQQQQQQQUUUUUUUUUUUUUUUEEEEEEEEEEEEE</legend>
    <div class="form-group row ">

    </div>
   
    <div class="form-group">
      <label for="exampleInputpseudo" class="form-label mt-4">pseudo</label>
      <input type="text" @bind="user.Email" class="form-control" id="JeanBonBeurre" aria-describedby="pseudo" placeholder="enter pseudo">
      <small id="pseudoHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
    </div>
    <div class="form-group">
      <label for="exampleInputPassword1"  class="form-label mt-4">Password</label>
      <input type="password" class="form-control" @bind="user.Passwd" id="exampleInputPassword1" placeholder="Password">
    </div>
 
    <button type="button" class="btn btn-primary" @onclick = "OnInitializedAsync" >Submit</button>
 </fieldset>

</form>


@code {
    private User user;


    protected override async Task OnInitializedAsync()
    {
        var postbody = new User();

        using var response = await httpClient.PostAsJsonAsync("https://localhost:10000/User", postbody);

        if (!response.IsSuccessStatusCode)
        {
            var errorMessage = response.ReasonPhrase;
            Console.WriteLine($"there was an error ! {errorMessage}");
            return;
        }
        var article = await response.Content.ReadFromJsonAsync<User>();


    }


}
